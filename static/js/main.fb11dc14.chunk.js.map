{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/CountryPicker/CountryPicker.js","components/Chart/Chart.js","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changebleUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb11dc14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography,Grid} from '@material-ui/core';\nimport CountUp from 'react-countup'; //library for counter\nimport styles from './Cards.module.css';\nimport cx from 'classnames'; //for adding multiple classnames, when using modules, that can b done using this\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\n    if(!confirmed){\n       return 'Loading.......';\n    }\n    return(\n    <div className={styles.container}>\n        <Grid container spacing={3} justify='center'>\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n               <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>  \n                   <Typography variant=\"h5\">\n                       <CountUp start={0} end={confirmed.value} duration={2.5} seperator=\",\" />\n                    </Typography>  \n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography> \n                   <Typography variant=\"body2\" >No. of Active Cases of Covid-19</Typography>   \n                </CardContent> \n           </Grid>\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n               <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>  \n                   <Typography variant=\"h5\">\n                       <CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\" />\n                    </Typography> \n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>  \n                   <Typography variant=\"body2\" >No. of Recoveries from Covid-19</Typography>   \n                </CardContent> \n           </Grid>\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n               <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>  \n                   <Typography variant=\"h5\">\n                       <CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\" />\n                    </Typography>   \n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography> \n                   <Typography variant=\"body2\" >No. of Deaths caused by Covid-19</Typography>   \n                </CardContent> \n           </Grid>\n        </Grid>\n\n    </div>\n    )\n}\nexport default Cards","import axios from 'axios';\n\nconst url='https://covid19.mathdro.id/api';\n\nexport const fetchData=async (country)=>{\n  let changebleUrl=url;      \n  if(country){   //making the url dynamic\n    changebleUrl=`${url}/countries/${country}`\n  }\n   try{\n     const {data}=await axios.get(changebleUrl); //destructuring the data from the response\n     const modifiedData={\n         confirmed:data.confirmed,\n         recovered:data.recovered,\n         deaths:data.deaths,\n         lastUpdate:data.lastUpdate,\n     }\n\n     return modifiedData;\n   }\n   catch(error){\n    console.log(error);\n   }\n}\n\nexport const fetchDailyData=async()=>{\n  try{\n     const {data}=await axios.get(`${url}/daily`);\n     const modifiedData=data.map((dailyData)=>({    //returns an object\n       confirmed:dailyData.confirmed.total,\n       deaths:dailyData.deaths.total,\n       date:dailyData.reportDate,\n     }));\n\n     return modifiedData;\n  }\n  catch(error){\n   console.log(error);\n  }\n}\n\nexport const fetchCountries=async()=>{\n  try{\n    const {data:{countries}}=await axios.get(`${url}/countries`);\n    return countries.map((country)=>country.name);\n  }\n  catch(error){\n    console.log(error);\n  }\n}","import React,{useState,useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport {fetchCountries} from '../../api';\nimport styles from './CountryPicker.module.css';\nconst CountryPicker=({handleCountryChange})=>{\n    \n    const [fetchedCountries, setFetchedCountries]=useState([]);\n\n    useEffect(()=>{\n      const fetchAPI=async ()=>{\n       setFetchedCountries(await fetchCountries());\n      }\n      fetchAPI();\n    },[setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=''>Global</option>\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\nexport default CountryPicker;","import React,{useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart=({data,country})=>{\n    \n      const [dailyData,setDailyData]=useState([]);\n     \n      useEffect(()=>{\n         const fetchAPI=async()=>{\n              setDailyData(await fetchDailyData()); //setting daily data directly\n         }\n         fetchAPI();\n      },[]);\n\n      const lineChart=(\n        dailyData.length\n        ?(\n         <Line\n             data={{\n                 labels:dailyData.map(({date})=>date),//destructuring date from dailyDate\n                 datasets:\n                         [{\n                             data:dailyData.map(({confirmed})=>confirmed),//destructuring confirmed from dailydata\n                             label:'Infected',\n                             borderColor:'#3333ff',\n                             fill:true,\n                            },\n                         {\n                            data:dailyData.map(({deaths})=>deaths),//destructuring recovered from dailydata\n                             label:'Deaths',\n                             borderColor:'red',\n                             backgroundColor:'rgba(255,0,0,0.5)',\n                             fill:true,\n                         }],\n                    // 2 datasets only as daily confirmed and daily deaths is der in api not daily recovered\n\n             }}\n         />)\n         :null\n      );\n\n      const barChart=(\n          data.confirmed?(\n            <Bar\n               data={{\n                 labels:['Infected','Recovered','Deaths'],\n                 datasets:[{\n                     label:'People',\n                     backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,255,0.5)'],\n                     data:[data.confirmed.value,data.recovered.value,data.deaths.value]\n                 }]\n               }}\n               options={{\n                   legend:{display:false},\n                   title:{display:true,text:`Current State in ${country}`},\n                \n               }}\n             \n            />\n          ):null\n      )\n\n      return (\n          <div className={styles.container}>\n            {country?barChart:lineChart}\n          </div>\n    );\n}\nexport default Chart;","import React from 'react';\nimport Cards from './components/Cards/Cards';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport Chart from './components/Chart/Chart';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nclass App extends React.Component{\n    \n    state={\n        data:{},\n        country:'',\n    }\n\n    async componentDidMount(){\n        const fetchedData=await fetchData();\n        //console.log(data);\n        this.setState({data:fetchedData});\n    }\n\n    handleCountryChange=async(country)=>{\n     //console.log(country);\n     const fetchedData=await fetchData(country);\n     //console.log(fetchedData);\n     this.setState({data:fetchedData, country:country});\n    }\n\n    render(){\n        const{data,country}=this.state;\n        return(\n            <div className={styles.container}>\n                <h1>Covid-19 React Tracker</h1>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n                \n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}